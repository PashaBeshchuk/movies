{"version":3,"sources":["image/loader.gif","api/api.js","api/film-api.js","functions/navbar-functions.js","redux/film-reducer.js","components/films/FilmData.jsx","components/Preloader.jsx","components/films/Films.jsx","components/navbar/Navbar.jsx","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","api","axios","create","baseURL","movieAPI","getAllFilms","get","getAllData","data","editRegister","letter","codePointAt","getAllDataForFilm","dataFilm","a","allData","j","length","breakLink","split","url","filmAPI","push","keys","Object","cloneDataFilm","i","Array","isArray","initState","films","listFilmsTitle","searchFilm","movieDetails","activeId","preloader","updateFilmsAC","type","updatePreloaderAC","getAllFilmsTitle","filmsTitle","forEach","film","title","filmReducer","state","action","FilmDAta","props","visualPlanets","visualSpecies","visualStarships","visualVehicles","visualCharacters","getAllDataThunk","updateActiveIdAC","visualData","array","dataElem","className","planets","species","starships","vehicles","characters","onClick","episode_id","producer","opening_crawl","Preloader","src","loader","connect","getAllFilmsThunk","dispatch","status","results","result","useEffect","getSearchFilm","find","listFilmsStyle","listFilms","arrayFilms","listFilmsForArrayFilms","k","key","listFilmsStyleFunction","map","id","SizeMeRenderer","updateSearchFilmsAC","size","useState","hintsForSearch","setHintsForSearch","indent","width","getFilms","e","target","innerHTML","hintList","hint","onChange","listSearchFilms","searchLetters","differentRegister","searchLettersArray","matchingNames","arrayLettersFilmsTitle","matchingNamesFilter","z","arrayMatchingNamesFilter","splice","searchFilmAlgorithm","value","placeholder","aria-label","sortFilms","cloneArrayFilms","ckechFilm","lastItemIndex","sortFolmsAlgorithm","style","App","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.21cdb7b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.d9933c4e.gif\";","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL:\"https://swapi.dev/api\",\r\n})\r\n\r\nexport default api;","import api from './api';\r\n\r\nconst movieAPI = {\r\n    getAllFilms: () => {\r\n        return api.get('/films/')\r\n    },\r\n    getAllData:(data) => {\r\n        return api.get(data)\r\n    }\r\n}\r\n\r\nexport default movieAPI;","import filmAPI from '../api/film-api'\r\nexport const editRegister = (letter) => {\r\n    let differentRegisterLetter\r\n    if(letter.codePointAt() >= 97 && letter.codePointAt() <= 122 ) {\r\n        //capital letter\r\n        differentRegisterLetter = letter.codePointAt() - 32\r\n        return differentRegisterLetter\r\n    } else if(letter.codePointAt() >= 65 && letter.codePointAt() <= 90 ) {\r\n        //small lettet\r\n        differentRegisterLetter = letter.codePointAt() + 32\r\n        return differentRegisterLetter\r\n    }\r\n}\r\n\r\n\r\nexport const searchFilmAlgorithm  = (searchLetters, filmsTitle) => {\r\n    const searchLettersArray = searchLetters.split(\"\");\r\n    let matchingNames = [];\r\n    let differentRegister;\r\n    for(let i = 0; i < searchLettersArray.length; i++) {\r\n        if(i === 0) {\r\n            differentRegister = editRegister(searchLettersArray[i])\r\n            for(let j = 0; j < filmsTitle.length; j++){\r\n                const arrayLettersFilmsTitle = filmsTitle[j].split(\"\")\r\n                if(arrayLettersFilmsTitle[i].codePointAt() === searchLettersArray[i].codePointAt() \r\n                    ||\r\n                    arrayLettersFilmsTitle[i].codePointAt() === differentRegister){\r\n                    matchingNames.push(filmsTitle[j])\r\n                }\r\n            }\r\n        } else {\r\n            const matchingNamesFilter = [...matchingNames]\r\n            let z \r\n            for( z = 0 ; z < matchingNamesFilter.length; z++) {\r\n                const arrayMatchingNamesFilter = matchingNamesFilter[z].split(\"\")\r\n                for(let k = 0; k < searchLettersArray.length; k++) {\r\n                    differentRegister = editRegister(searchLettersArray[k])\r\n                    if(arrayMatchingNamesFilter[k].codePointAt() !== searchLettersArray[k].codePointAt() \r\n                    &&\r\n                    arrayMatchingNamesFilter[k].codePointAt() !== differentRegister) {\r\n                        matchingNamesFilter.splice( z,1)\r\n                        z = 0\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            matchingNames = matchingNamesFilter\r\n        }\r\n        \r\n    }\r\n    return matchingNames\r\n}\r\n\r\n\r\nexport const sortFolmsAlgorithm = (films) => {\r\n    const cloneArrayFilms = [...films] \r\n    for(let i = 0; i < cloneArrayFilms.length; i++) { \r\n        let ckechFilm = cloneArrayFilms[i], lastItemIndex = i-1; \r\n        while(lastItemIndex >= 0 && cloneArrayFilms[lastItemIndex].title > ckechFilm.title) { \r\n            cloneArrayFilms[lastItemIndex+1] = cloneArrayFilms[lastItemIndex]; \r\n            lastItemIndex--; \r\n        }\r\n        cloneArrayFilms[lastItemIndex+1] = ckechFilm; \r\n    }\r\n    return cloneArrayFilms;\r\n}\r\n\r\n\r\nexport const getAllDataForFilm = async (dataFilm) => {\r\n    const allData = []\r\n    for(let j = 0; j < dataFilm.length; j++){\r\n        const breakLink = dataFilm[j].split('/')\r\n        const url = `/${breakLink[4]}/${breakLink[5]}`\r\n        const {data} = await filmAPI.getAllData(url)\r\n        allData.push(data)\r\n    } \r\n    return allData\r\n}\r\n\r\nexport const getAllData = async (dataFilm) =>{\r\n    const keys = Object.keys(dataFilm)\r\n    const cloneDataFilm = {...dataFilm}\r\n    \r\n    for(let i = 0; i < keys.length; i++){\r\n        if(Array.isArray(dataFilm[keys[i]])){\r\n            let data = await getAllDataForFilm((dataFilm[keys[i]]))\r\n            cloneDataFilm[keys[i]] = data  \r\n        }\r\n    }\r\n    return cloneDataFilm\r\n}","import filmAPI from \"../api/film-api\";\r\nimport { getAllData } from '../functions/navbar-functions';\r\nconst UPDATE_FILMS = \"UPDATE_FILMS\";\r\nconst UPDATE_FILMS_TITLE = \"UPDATE_FILMS_TITLE\";\r\nconst UPDATE_SEARCH_FILM = \"UPDATE_SEARCH_FILM\";\r\nconst UPDATE_MOVIE_DETAILS = \"UPDATE_MOVIE_DETAILS\";\r\nconst UPDATE_ACTIVE_ID = \"UPDATE_ACTIVE_ID\";\r\nconst UPDATE_PRELOADER = \"UPDATE_PRELOADER\";\r\n\r\nconst initState = {\r\n    films:[],\r\n    listFilmsTitle:[],\r\n    searchFilm: null,\r\n    movieDetails: [],\r\n    activeId: null,\r\n    preloader: false\r\n}\r\n\r\nconst filmReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_FILMS:\r\n            return {\r\n                ...state,\r\n                films: action.films\r\n            }\r\n        case UPDATE_FILMS_TITLE:\r\n            return {\r\n                ...state,\r\n                listFilmsTitle: action.listFilmsTitle\r\n            }\r\n        case UPDATE_SEARCH_FILM:\r\n            return {\r\n                ...state,\r\n                searchFilm: action.searchFilm\r\n            }    \r\n        case UPDATE_MOVIE_DETAILS:\r\n            return {\r\n                ...state,\r\n                movieDetails: action.movieDetails\r\n            }    \r\n        case UPDATE_ACTIVE_ID:\r\n            return {\r\n                ...state,\r\n                activeId: action.activeId\r\n            }    \r\n        case UPDATE_PRELOADER:\r\n            return {\r\n                ...state,\r\n                preloader: action.preloader\r\n            }    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const updateFilmsAC = (films) => ({ type:UPDATE_FILMS, films })\r\nconst updateFilmsTitleAC = (listFilmsTitle) => ({ type:UPDATE_FILMS_TITLE, listFilmsTitle })\r\nexport const updateSearchFilmsAC = (searchFilm) => ({ type:UPDATE_SEARCH_FILM, searchFilm })\r\nconst updateMovieDetailsAC = (movieDetails) =>({ type:UPDATE_MOVIE_DETAILS, movieDetails }) \r\nexport const updateActiveIdAC = (activeId) =>({ type:UPDATE_ACTIVE_ID, activeId }) \r\nexport const updatePreloaderAC = (preloader) =>({ type:UPDATE_PRELOADER, preloader }) \r\n\r\nconst getAllFilmsTitle = (films) => {\r\n    const filmsTitle = []\r\n    films.forEach(film => {\r\n        filmsTitle.push(film.title)\r\n    });\r\n    return filmsTitle\r\n}\r\n\r\nexport const getAllFilmsThunk = () => {\r\n    return async (dispatch) => {\r\n        const { data, status } = await filmAPI.getAllFilms()\r\n        if(status === 200) {\r\n            dispatch(updateFilmsAC(data.results))\r\n            const filmsTitle = getAllFilmsTitle(data.results)\r\n            dispatch(updateFilmsTitleAC(filmsTitle))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAllDataThunk = (dataFilm) => {\r\n    return async (dispatch) => {\r\n        const result = await getAllData(dataFilm)\r\n        const keys = Object.keys(result)\r\n        for(let i = 0; i < keys.length; i++) {\r\n            for(let j = 0; j < result[keys[i]].length; j++) {\r\n                const data = await getAllData(result[keys[i]][j])\r\n                result[keys[i]][j] = data\r\n            }\r\n        }\r\n        dispatch(updateMovieDetailsAC(result))\r\n        dispatch(updatePreloaderAC(false))    \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default filmReducer;","import React from 'react';\r\nimport '../components-style.css';\r\n\r\n\r\nconst FilmDAta = (props) => {\r\n    const {getAllDataThunk, film, movieDetails, updateActiveIdAC, updatePreloaderAC} = props\r\n    let visualPlanets, visualSpecies, visualStarships, visualVehicles,  visualCharacters\r\n        \r\n    const visualData = (array) => {\r\n        const data = [] \r\n        for(let i = 0 ; i < array.length; i++){\r\n            for(let dataElem in array[i]) {\r\n                if(Array.isArray(array[i][dataElem])) {  \r\n                } else {\r\n                    data.push(<div className='detalData'><span>{dataElem}</span>: {array[i][dataElem]}</div>)\r\n                }\r\n            }\r\n        }\r\n        return data\r\n    }\r\n    \r\n    const getAllDataFilm = () => {\r\n        updateActiveIdAC(film.episode_id)\r\n        updatePreloaderAC(true)\r\n        const { planets, species, starships, vehicles, characters } = film\r\n        getAllDataThunk({\r\n            planets,\r\n            species,\r\n            starships,\r\n            vehicles,\r\n            characters\r\n        })\r\n    }\r\n    if(movieDetails){\r\n        const { planets, species, starships, vehicles, characters }  = movieDetails\r\n        if(planets) { visualPlanets = visualData(planets) }\r\n        if(species) { visualSpecies = visualData(species) }\r\n        if(starships) { visualStarships = visualData(starships) }\r\n        if(vehicles) { visualVehicles = visualData(vehicles) }\r\n        if(characters) { visualCharacters = visualData(characters) }\r\n    }\r\n    \r\n        \r\n    return <>\r\n        <h1 onClick={getAllDataFilm}>{film.title}</h1>\r\n        <p>Producer: { film.producer }</p>\r\n        <p>Director: { film.producer }</p>\r\n        <p>{ film.opening_crawl }</p>\r\n        <div>\r\n           {visualPlanets}\r\n           {visualSpecies}\r\n           {visualStarships}\r\n           {visualVehicles}\r\n           {visualCharacters}\r\n        </div>\r\n        \r\n    </>\r\n}\r\n\r\nexport default FilmDAta","import React from 'react';\r\nimport loader from '../image/loader.gif'\r\nimport './components-style.css'\r\n\r\nconst Preloader = (props) => {\r\n    return <div className='preloader'><img src={loader}/></div>\r\n}\r\nexport default Preloader","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAllFilmsThunk, getAllDataThunk, updateActiveIdAC, updatePreloaderAC } from '../../redux/film-reducer'\r\nimport FilmDAta from './FilmData';\r\nimport '../components-style.css';\r\nimport Preloader from '../Preloader';\r\n\r\nconst Films = ({ getAllFilmsThunk, \r\n    films, searchFilm, getAllDataThunk, \r\n    movieDetails, activeId, updateActiveIdAC,\r\n    preloader, updatePreloaderAC }) => {\r\n    useEffect(()=>{\r\n        getAllFilmsThunk()\r\n    }, [])\r\n    const getSearchFilm = films.find((film)=> film.title === searchFilm)\r\n    const listFilms = films.map((film, id)=> {\r\n        if(!getSearchFilm){\r\n            if(film.episode_id === activeId) {\r\n                return <FilmDAta \r\n                    movieDetails={movieDetails} \r\n                    film={film} \r\n                    getAllDataThunk={getAllDataThunk}\r\n                    updateActiveIdAC={updateActiveIdAC}\r\n                    updatePreloaderAC={updatePreloaderAC}\r\n                    />\r\n            } else {\r\n                return <FilmDAta \r\n                    film={film} \r\n                    getAllDataThunk={getAllDataThunk}\r\n                    updateActiveIdAC={updateActiveIdAC}\r\n                    updatePreloaderAC={updatePreloaderAC}\r\n                    />\r\n            }  \r\n        } else {\r\n            if(film.title === getSearchFilm.title){\r\n                if(film.episode_id === activeId) {\r\n                    return <FilmDAta \r\n                        movieDetails={movieDetails} \r\n                        film={film} \r\n                        getAllDataThunk={getAllDataThunk}\r\n                        updateActiveIdAC={updateActiveIdAC}\r\n                        updatePreloaderAC={updatePreloaderAC}\r\n                        />\r\n                } else {\r\n                    return <FilmDAta \r\n                        film={film} \r\n                        getAllDataThunk={getAllDataThunk}\r\n                        updateActiveIdAC={updateActiveIdAC}\r\n                        updatePreloaderAC={updatePreloaderAC}\r\n                        />\r\n                }  \r\n            }\r\n        }\r\n     \r\n    })\r\n\r\n    const listFilmsStyleFunction = (listFilms) => {\r\n        const arrayFilms = []\r\n        let listFilmsForArrayFilms = []\r\n        for(let i = 0, k = 1; i <= listFilms.length; i++){\r\n            if(listFilms.length/2 === i){\r\n                arrayFilms.push(<div key={k} className='row'>\r\n                    {listFilmsForArrayFilms}\r\n                </div>)\r\n                k++\r\n                listFilmsForArrayFilms = []\r\n            }\r\n            if(listFilms.length === i){\r\n                arrayFilms.push(<div key={k} className='row'>\r\n                    {listFilmsForArrayFilms}\r\n                </div>)\r\n                listFilmsForArrayFilms = []\r\n            }\r\n            listFilmsForArrayFilms.push(<div key={i} className='container col-3 box-content'>{listFilms[i]}</div>)\r\n        }\r\n        return arrayFilms;\r\n    }\r\n    \r\n    const listFilmsStyle = listFilmsStyleFunction(listFilms)\r\n    return <div className='container col-12 films'>\r\n        {listFilmsStyle}\r\n        {preloader && <Preloader  />}\r\n    </div>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        films: state.filmReducer.films,\r\n        searchFilm: state.filmReducer.searchFilm,\r\n        movieDetails: state.filmReducer.movieDetails,\r\n        activeId: state.filmReducer.activeId,\r\n        preloader: state.filmReducer.preloader,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getAllFilmsThunk, getAllDataThunk, updateActiveIdAC, updatePreloaderAC })(Films)","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'; \r\nimport '../components-style.css';\r\nimport SizeMeRenderer from 'react-sizeme';\r\nimport  { updateSearchFilmsAC, updateFilmsAC } from '../../redux/film-reducer';\r\nimport { searchFilmAlgorithm, sortFolmsAlgorithm } from '../../functions/navbar-functions'\r\n\r\nconst Navbar = (props) => {\r\n    const {listFilmsTitle, size, updateSearchFilmsAC, films, updateFilmsAC} = props\r\n    const [ hintsForSearch, setHintsForSearch ] = useState([])\r\n    const indent = size.width-290\r\n    const getFilms = (e) => {\r\n        const film = listFilmsTitle.find((film) => film === e.target.innerHTML)\r\n        updateSearchFilmsAC(film)\r\n    }\r\n\r\n    const sortFilms = () => {\r\n        const sortFilms = sortFolmsAlgorithm(films)\r\n        updateFilmsAC(sortFilms)\r\n    } \r\n  \r\n  \r\n    const searchFilm = (e) => {\r\n        const listSearchFilms = searchFilmAlgorithm(e.target.value, listFilmsTitle)\r\n        setHintsForSearch(listSearchFilms)\r\n    }\r\n\r\n    const hintList = hintsForSearch.map((hint, id)=>{\r\n        return <div className='find-body-box' key={id} onClick={getFilms}>\r\n            {hint}\r\n        </div>\r\n    })\r\n    return <div className=\"navbar-box\">\r\n        <nav className=\"navbar navbar-light bg-light justify-content-between\">\r\n        <a className=\"navbar-brand\">Films</a>\r\n        <form className=\"form-inline\">\r\n            <input onChange={searchFilm} className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button \r\n                onClick={sortFilms}\r\n                className=\"btn btn-outline-success my-2 my-sm-0\" \r\n                type=\"button\" >Sort</button>\r\n        </form>\r\n        </nav>\r\n        {\r\n            hintList.length > 0 && <div className='container find-body' style={{\"left\":indent}} >\r\n                {hintList}\r\n            </div>\r\n        }\r\n        \r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        listFilmsTitle: state.filmReducer.listFilmsTitle,\r\n        films: state.filmReducer.films\r\n    }\r\n} \r\n\r\nexport default SizeMeRenderer()(connect(mapStateToProps,{updateSearchFilmsAC, updateFilmsAC})(Navbar))","import React from 'react';\nimport './App.css';\nimport Films from './components/films/Films';\nimport Navbar from './components/navbar/Navbar';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar/>\n      <Films/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport filmReducer from './film-reducer';\r\n\r\nconst reducers = combineReducers({filmReducer});\r\nconst store = createStore(reducers, applyMiddleware(reduxThunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}